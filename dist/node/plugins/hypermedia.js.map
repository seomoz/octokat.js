{"version":3,"sources":["../../../src/plugins/hypermedia.js"],"names":["deprecate","require","module","exports","instance","data","Array","isArray","_replaceArray","Date","Object","_replaceObject","orig","acc","iterable","keys","i","length","key","value","_replaceKeyValue","arr","map","item","replace","test","defaultFn","create","fn","args","_fromUrlWithDefault","fetch","_fromUrlCurried","newKey","substring","input","Promise","resolve"],"mappings":"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","file":"hypermedia.js","sourcesContent":["const deprecate = require('../deprecate')\n\nmodule.exports = new class HyperMedia {\n  replace (instance, data) {\n    if (Array.isArray(data)) {\n      return this._replaceArray(instance, data)\n    } else if (typeof data === 'function') {\n      return data\n    } else if (data instanceof Date) {\n      return data\n    } else if (data === Object(data)) {\n      return this._replaceObject(instance, data)\n    } else {\n      return data\n    }\n  }\n\n  _replaceObject (instance, orig) {\n    let acc = {}\n    let iterable = Object.keys(orig)\n    for (let i = 0; i < iterable.length; i++) {\n      let key = iterable[i]\n      let value = orig[key]\n      this._replaceKeyValue(instance, acc, key, value)\n    }\n\n    return acc\n  }\n\n  _replaceArray (instance, orig) {\n    let arr = (orig.map((item) => this.replace(instance, item)))\n    // Convert the nextPage methods for paged results\n    let iterable = Object.keys(orig)\n    for (let i = 0; i < iterable.length; i++) {\n      let key = iterable[i]\n      let value = orig[key]\n      this._replaceKeyValue(instance, arr, key, value)\n    }\n    return arr\n  }\n\n  // Convert things that end in `_url` to methods which return a Promise\n  _replaceKeyValue (instance, acc, key, value) {\n    if (/_url$/.test(key)) {\n      if (/^upload_url$/.test(key)) {\n        // POST https://<upload_url>/repos/:owner/:repo/releases/:id/assets?name=foo.zip\n        var defaultFn = function (...args) {\n          // TODO: Maybe always set isRaw=true when contentType is provided\n          deprecate('call .upload({name, label}).create(data, contentType)' +\n            ' instead of .upload(name, data, contentType)')\n          return defaultFn.create(...args)\n        }\n\n        var fn = (...args) => instance._fromUrlWithDefault(value, defaultFn, ...args)()\n      } else {\n        var defaultFn = function () {\n          deprecate('instead of directly calling methods like .nextPage(), use .nextPage.fetch()')\n          return this.fetch()\n        }\n        var fn = instance._fromUrlCurried(value, defaultFn)\n      }\n\n      let newKey = key.substring(0, key.length - '_url'.length)\n      acc[newKey] = fn\n      // add a camelCase URL field for retrieving non-templated URLs\n      // like `avatarUrl` and `htmlUrl`\n      if (!/\\{/.test(value)) {\n        return acc[key] = value\n      }\n    } else if (/_at$/.test(key)) {\n      // Ignore null dates so we do not get `Wed Dec 31 1969`\n      return acc[key] = value ? new Date(value) : null\n    } else {\n      return acc[key] = this.replace(instance, value)\n    }\n  }\n\n  responseMiddlewareAsync (input) {\n    let {instance, data} = input\n    data = this.replace(instance, data)\n    input.data = data // or throw new Error('BUG! Expected JSON data to exist')\n    return Promise.resolve(input)\n  }\n}()\n"]}