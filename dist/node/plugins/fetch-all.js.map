{"version":3,"sources":["../../../src/plugins/fetch-all.js"],"names":["toQueryString","require","pushAll","target","source","Array","isArray","Error","push","apply","getMore","fetchable","requester","acc","nextPagePromise","fetchNextPage","then","results","items","obj","next_page_url","request","next_page","fetch","nextPageUrl","nextPage","module","exports","asyncVerbs","fetchAll","path","query"],"mappings":";;AAAA,IAAMA,gBAAgBC,QAAQ,wBAAR,CAAtB;;AAEA,IAAIC,UAAU,SAAVA,OAAU,CAAUC,MAAV,EAAkBC,MAAlB,EAA0B;AACtC,MAAI,CAACC,MAAMC,OAAN,CAAcF,MAAd,CAAL,EAA4B;AAC1B,UAAM,IAAIG,KAAJ,CAAU,2EAAV,CAAN;AACD;AACD,SAAOJ,OAAOK,IAAP,CAAYC,KAAZ,CAAkBN,MAAlB,EAA0BC,MAA1B,CAAP;AACD,CALD;;AAOA,IAAIM,UAAU,SAAVA,OAAU,CAAUC,SAAV,EAAqBC,SAArB,EAAgCC,GAAhC,EAAqC;AACjD,MAAMC,kBAAkBC,cAAcJ,SAAd,EAAyBC,SAAzB,CAAxB;AACA,MAAIE,eAAJ,EAAqB;AACnB,WAAOA,gBAAgBE,IAAhB,CAAqB,UAACC,OAAD,EAAa;AACvCf,cAAQW,GAAR,EAAaI,QAAQC,KAArB;AACA;AACA,aAAOR,QAAQO,OAAR,EAAiBL,SAAjB,EAA4BC,GAA5B,CAAP;AACD,KAJM,CAAP;AAKD,GAND,MAMO;AACL,WAAOA,GAAP;AACD;AACF,CAXD;;AAaA;AACA,IAAIE,gBAAgB,SAAhBA,aAAgB,CAAUI,GAAV,EAAeP,SAAf,EAA0B;AAC5C,MAAI,OAAOO,IAAIC,aAAX,KAA6B,QAAjC,EAA2C;AACzC,WAAOR,UAAUS,OAAV,CAAkB,KAAlB,EAAyBF,IAAIC,aAA7B,EAA4C,IAA5C,EAAkD,IAAlD,CAAP;AACD,GAFD,MAEO,IAAID,IAAIG,SAAR,EAAmB;AACxB,WAAOH,IAAIG,SAAJ,CAAcC,KAAd,EAAP;AACD,GAFM,MAEA,IAAI,OAAOJ,IAAIK,WAAX,KAA2B,QAA/B,EAAyC;AAC9C,WAAOZ,UAAUS,OAAV,CAAkB,KAAlB,EAAyBF,IAAIK,WAA7B,EAA0C,IAA1C,EAAgD,IAAhD,CAAP;AACD,GAFM,MAEA,IAAIL,IAAIM,QAAR,EAAkB;AACvB,WAAON,IAAIM,QAAJ,CAAaF,KAAb,EAAP;AACD,GAFM,MAEA;AACL,WAAO,KAAP;AACD;AACF,CAZD;;AAcA;AACAG,OAAOC,OAAP,GAAiB;AACfC,cAAY;AACVC,YADU,oBACAjB,SADA,EACWkB,IADX,EACiB;AACzB,aAAO,UAACC,KAAD,EAAW;AAChB;AACA,eAAOnB,UAAUS,OAAV,CAAkB,KAAlB,OAA4BS,IAA5B,GAAmC9B,cAAc+B,KAAd,CAAnC,EAA2D,IAA3D,EAAiE,IAAjE,EACNf,IADM,CACD,UAACC,OAAD,EAAa;AACjB,cAAIJ,MAAM,EAAV;AACAX,kBAAQW,GAAR,EAAaI,QAAQC,KAArB;AACA;AACA,iBAAOR,QAAQO,OAAR,EAAiBL,SAAjB,EAA4BC,GAA5B,CAAP;AACD,SANM,CAAP;AAOD,OATD;AAUD;AAZS;AADG,CAAjB","file":"fetch-all.js","sourcesContent":["const toQueryString = require('../helpers/querystring')\n\nlet pushAll = function (target, source) {\n  if (!Array.isArray(source)) {\n    throw new Error('Octokat Error: Calling fetchAll on a request that does not yield an array')\n  }\n  return target.push.apply(target, source)\n}\n\nlet getMore = function (fetchable, requester, acc) {\n  const nextPagePromise = fetchNextPage(fetchable, requester)\n  if (nextPagePromise) {\n    return nextPagePromise.then((results) => {\n      pushAll(acc, results.items)\n      // TODO: handle `items.next_page = string/function`, `items.nextPage = string/function`\n      return getMore(results, requester, acc)\n    })\n  } else {\n    return acc\n  }\n}\n\n// TODO: HACK to handle camelCase and hypermedia plugins\nvar fetchNextPage = function (obj, requester) {\n  if (typeof obj.next_page_url === 'string') {\n    return requester.request('GET', obj.next_page_url, null, null)\n  } else if (obj.next_page) {\n    return obj.next_page.fetch()\n  } else if (typeof obj.nextPageUrl === 'string') {\n    return requester.request('GET', obj.nextPageUrl, null, null)\n  } else if (obj.nextPage) {\n    return obj.nextPage.fetch()\n  } else {\n    return false\n  }\n}\n\n// new class FetchAll\nmodule.exports = {\n  asyncVerbs: {\n    fetchAll (requester, path) {\n      return (query) => {\n        // TODO: Pass in the instance so we can just call fromUrl maybe? and we don't rely on hypermedia to create nextPage\n        return requester.request('GET', `${path}${toQueryString(query)}`, null, null)\n        .then((results) => {\n          let acc = []\n          pushAll(acc, results.items)\n          // TODO: handle `items.next_page = string/function`, `items.nextPage = string/function`\n          return getMore(results, requester, acc)\n        })\n      }\n    }\n  }\n}\n"]}