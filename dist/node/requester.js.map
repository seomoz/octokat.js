{"version":3,"sources":["../../src/requester.js"],"names":["require","filter","map","EVENT_ID","module","exports","_instance","_clientOptions","plugins","fetchImpl","rootURL","useETags","usePostInsteadOfPatch","userAgent","window","emitter","_emit","_pluginMiddlewareAsync","requestMiddlewareAsync","plugin","bind","_plugins","_fetchImpl","method","path","data","options","isRaw","isBase64","isBoolean","contentType","cb","test","headers","acceptHeader","acc","clientOptions","initial","Promise","resolve","prev","forEach","p","then","fetchArgs","body","JSON","stringify","eventId","__guardFunc__","f","response","jqXHR","get","rateLimit","parseFloat","rateLimitRemaining","rateLimitReset","emitterRate","remaining","limit","reset","scopes","split","status","dataPromise","indexOf","json","text","request","requester","instance","_parseWithContextPromise","reject","Error","func","transform","undefined"],"mappings":";;;;;;eAAwBA,QAAQ,QAAR,C;IAAhBC,M,YAAAA,M;IAAQC,G,YAAAA,G;;AAEhB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,IAAIC,WAAW,CAAf,C,CAAiB;;AAEjBC,OAAOC,OAAP;AACE,qBAAaC,SAAb,EAAiE;AAAA,QAAzCC,cAAyC,uEAAxB,EAAwB;;AAAA,QAApBC,OAAoB;AAAA,QAAXC,SAAW;;AAAA;;AAC/D;AACA,SAAKH,SAAL,GAAiBA,SAAjB;AACA,SAAKC,cAAL,GAAsBA,cAAtB;AACA,QAAI,KAAKA,cAAL,CAAoBG,OAApB,IAA+B,IAAnC,EAAyC;AAAE,WAAKH,cAAL,CAAoBG,OAApB,GAA8B,wBAA9B;AAAwD;AACnG,QAAI,KAAKH,cAAL,CAAoBI,QAApB,IAAgC,IAApC,EAA0C;AAAE,WAAKJ,cAAL,CAAoBI,QAApB,GAA+B,IAA/B;AAAqC;AACjF,QAAI,KAAKJ,cAAL,CAAoBK,qBAApB,IAA6C,IAAjD,EAAuD;AAAE,WAAKL,cAAL,CAAoBK,qBAApB,GAA4C,KAA5C;AAAmD;AAC5G,QAAI,KAAKL,cAAL,CAAoBM,SAApB,IAAiC,IAArC,EAA2C;AACzC,UAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,WAAW,IAAhD,EAAsD;AACpD;AACA;AACA;AACA,aAAKP,cAAL,CAAoBM,SAApB,GAAgC,YAAhC;AACD;AACF;;AAED;AACA,QAAI,OAAO,KAAKN,cAAL,CAAoBQ,OAA3B,KAAuC,UAA3C,EAAuD;AACrD,WAAKC,KAAL,GAAa,KAAKT,cAAL,CAAoBQ,OAAjC;AACD;;AAED,SAAKE,sBAAL,GAA8Bf,IAAID,OAAOO,OAAP,EAAgB;AAAA,UAAEU,sBAAF,QAAEA,sBAAF;AAAA,aAA8BA,sBAA9B;AAAA,KAAhB,CAAJ,EAA2E;AAAA,aAAUC,OAAOD,sBAAP,CAA8BE,IAA9B,CAAmCD,MAAnC,CAAV;AAAA,KAA3E,CAA9B;AAEA,SAAKE,QAAL,GAAgBb,OAAhB;AACA,SAAKc,UAAL,GAAkBb,SAAlB;AACD;;AAED;AACA;AACA;;;AA9BF;AAAA;AAAA,4BA+BWc,MA/BX,EA+BmBC,IA/BnB,EA+ByBC,IA/BzB,EA+BiI;AAAA;;AAAA,UAAlGC,OAAkG,uEAAxF,EAACC,OAAO,KAAR,EAAeC,UAAU,KAAzB,EAAgCC,WAAW,KAA3C,EAAkDC,aAAa,kBAA/D,EAAwF;AAAA,UAAJC,EAAI;;AAC7H,UAAI,OAAOL,OAAP,KAAmB,WAAnB,IAAkCA,YAAY,IAAlD,EAAwD;AAAEA,kBAAU,EAAV;AAAc;AACxE,UAAIA,QAAQC,KAAR,IAAiB,IAArB,EAA2B;AAAED,gBAAQC,KAAR,GAAgB,KAAhB;AAAuB;AACpD,UAAID,QAAQE,QAAR,IAAoB,IAAxB,EAA8B;AAAEF,gBAAQE,QAAR,GAAmB,KAAnB;AAA0B;AAC1D,UAAIF,QAAQG,SAAR,IAAqB,IAAzB,EAA+B;AAAEH,gBAAQG,SAAR,GAAoB,KAApB;AAA2B;AAC5D,UAAIH,QAAQI,WAAR,IAAuB,IAA3B,EAAiC;AAAEJ,gBAAQI,WAAR,GAAsB,kBAAtB;AAA0C;;AAE7E;;AAEA;AACA;AACA,UAAI,CAAC,QAAQE,IAAR,CAAaR,IAAb,CAAL,EAAyB;AAAEA,oBAAU,KAAKjB,cAAL,CAAoBG,OAA9B,GAAwCc,IAAxC;AAAgD;;AAE3E,UAAIS,UAAU;AACZ,kBAAU,KAAK1B,cAAL,CAAoB2B,YAApB,IAAoC;;AAGhD;AAJc,OAAd,CAKA,IAAI,KAAK3B,cAAL,CAAoBM,SAAxB,EAAmC;AACjCoB,gBAAQ,YAAR,IAAwB,KAAK1B,cAAL,CAAoBM,SAA5C;AACD;;AAED,UAAIsB,MAAM,EAACZ,cAAD,EAASC,UAAT,EAAeS,gBAAf,EAAwBP,gBAAxB,EAAiCU,eAAe,KAAK7B;;AAE/D;AACA;AAHU,OAAV,CAIA,IAAI8B,UAAUC,QAAQC,OAAR,CAAgBJ,GAAhB,CAAd;;AAEA,UAAIK,OAAOH,OAAX;AACA,WAAKpB,sBAAL,CAA4BwB,OAA5B,CAAoC,UAACC,CAAD,EAAO;AACzCF,eAAOA,KAAKG,IAAL,CAAUD,CAAV,CAAP;AACD,OAFD;AAGA,aAAOF,KAAKG,IAAL,CAAU,UAACR,GAAD,EAAS;AAAA,mBACHA,GADG;AACtBZ,cADsB,QACtBA,MADsB;AACdU,eADc,QACdA,OADc;;;AAGxB,YAAIP,QAAQC,KAAZ,EAAmB;AAAEM,kBAAQ,QAAR,IAAoB,4BAApB;AAAkD;;AAEvE,YAAIW,YAAY;AACd;AACA;AACArB,wBAHc;AAIdU,0BAJc;AAKdY,gBAAO,CAACnB,QAAQC,KAAT,IAAkBF,IAAlB,IAA0BqB,KAAKC,SAAL,CAAetB,IAAf,CAA3B,IAAoDA;AAL5C,SAAhB;;AAQA,YAAIuB,UAAU,EAAE7C,QAAhB;AACA8C,sBAAc,MAAKjC,KAAnB,EAA0B;AAAA,iBAAKkC,EAAE,OAAF,EAAWF,OAAX,EAAoB,EAACzB,cAAD,EAASC,UAAT,EAAeC,UAAf,EAAqBC,gBAArB,EAApB,CAAL;AAAA,SAA1B;;AAEA,eAAO,MAAKJ,UAAL,CAAgBE,IAAhB,EAAsBoB,SAAtB,EACND,IADM,CACD,UAACQ,QAAD,EAAc;AAClB,cAAIC,QAAQD,QAAZ;;AAEA;AACA,cAAI,MAAKnC,KAAT,EAAgB;AACd,gBAAImC,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,mBAArB,CAAJ,EAA+C;AAC7C,kBAAIC,YAAYC,WAAWJ,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,mBAArB,CAAX,CAAhB;AACA,kBAAIG,qBAAqBD,WAAWJ,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,uBAArB,CAAX,CAAzB;AACA,kBAAII,iBAAiBF,WAAWJ,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,mBAArB,CAAX,CAArB;AACA;AACA;AACA;;AAEA,kBAAIK,cAAc;AAChBC,2BAAWH,kBADK;AAEhBI,uBAAON,SAFS;AAGhBO,uBAAOJ;AAHS,eAAlB;;AAMA,kBAAIN,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,gBAArB,CAAJ,EAA4C;AAC1CK,4BAAYI,MAAZ,GAAqBX,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,gBAArB,EAAuCU,KAAvC,CAA6C,IAA7C,CAArB;AACD;AACF;AACD,kBAAK/C,KAAL,CAAW,KAAX,EAAkBgC,OAAlB,EAA2B,EAACzB,cAAD,EAASC,UAAT,EAAeC,UAAf,EAAqBC,gBAArB,EAA3B,EAA0DyB,SAASa,MAAnE,EAA2EN,WAA3E;AACD;;AAED;;AAEA;AACA;AACA,cAAIP,SAASa,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,mBAAOb,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,UAArB,CAAP;AACD,WAFD,MAEO,IAAI3B,QAAQG,SAAR,IAAqBsB,SAASa,MAAT,KAAoB,GAA7C,EAAkD;AACvD;AACA;AACA,mBAAO,IAAP;AACD,WAJM,MAIA,IAAItC,QAAQG,SAAR,IAAqBsB,SAASa,MAAT,KAAoB,GAA7C,EAAkD;AACvD,mBAAO,KAAP;AACF;AACA;AACC,WAJM,MAIA,IAAKb,SAASa,MAAT,IAAmB,GAAnB,IAA0Bb,SAASa,MAAT,GAAkB,GAA7C,IAAqDb,SAASa,MAAT,KAAoB,GAAzE,IAAgFb,SAASa,MAAT,KAAoB,GAApG,IAA2Gb,SAASa,MAAT,KAAoB,CAAnI,EAAsI;AAC3I;AACA,gBAAIC,oBAAJ;;AAEA;AACA,gBAAId,SAASa,MAAT,KAAoB,GAAxB,EAA6B;AAC3BC,4BAAc3B,QAAQC,OAAR,CAAgB,IAAhB,CAAd;AACD,aAFD,MAEO;AACL;;AAEA,kBAAMT,cAAcqB,SAASlB,OAAT,CAAiBoB,GAAjB,CAAqB,cAArB,KAAwC,EAA5D;;AAEA;AACA,kBAAIvB,YAAYoC,OAAZ,CAAoB,kBAApB,MAA4C,CAAhD,EAAmD;AACjDD,8BAAcd,SAASgB,IAAT,EAAd;AACD,eAFD,MAEO;AACL;AACA;AACA;AACA;AACAF,8BAAcd,SAASiB,IAAT,EAAd;AACD;AACF;;AAED,mBAAOH,YAAYtB,IAAZ,CAAiB,UAAClB,IAAD,EAAU;AAChCU,oBAAM;AACJC,+BAAe,MAAK7B,cADhB;AAEJC,yBAAS,MAAKa,QAFV;AAGJI,0BAHI;AAIJC,gCAJI;AAKJ0B,4BALI,EAKG;AACPY,wBAAQb,SAASa,MANb,EAMqB;AACzBK,yBAASlC,GAPL,EAOU;AACdmC,gCARI,EAQa;AACjBC,0BAAU,MAAKjE,SATX,CASqB;AATrB,eAAN;AAWA,qBAAO,MAAKA,SAAL,CAAekE,wBAAf,CAAwC,EAAxC,EAA4CrC,GAA5C,CAAP;AACD,aAbM,CAAP;AAcD,WAtCM,MAsCA;AACL,mBAAOgB,SAASiB,IAAT,GAAgBzB,IAAhB,CAAqB,UAACyB,IAAD,EAAU;AACpC,qBAAO9B,QAAQmC,MAAR,CAAe,IAAIC,KAAJ,CAAaN,IAAb,SAAqBxB,UAAUrB,MAA/B,SAAyCC,IAAzC,iBAAyD2B,SAASa,MAAlE,CAAf,CAAP;AACD,aAFM,CAAP;AAGD;AACF,SApFM,CAAP;AAqFD,OArGM,CAAP;AAsGD;AArKH;;AAAA;AAAA;;AAwKA,SAASf,aAAT,CAAwB0B,IAAxB,EAA8BC,SAA9B,EAAyC;AACvC,SAAO,OAAOD,IAAP,KAAgB,UAAhB,GAA6BC,UAAUD,IAAV,CAA7B,GAA+CE,SAAtD;AACD","file":"requester.js","sourcesContent":["const { filter, map } = require('./plus')\n\n// Request Function\n// ===============================\n//\n// Generates the actual HTTP requests to GitHub.\n// Handles ETag caching, authentication headers, boolean requests, and paged results\n\n// # Construct the request function.\n// It contains all the auth credentials passed in to the client constructor\n\nlet EVENT_ID = 0 // counter for the emitter so it is easier to match up requests\n\nmodule.exports = class Requester {\n  constructor (_instance, _clientOptions = {}, plugins, fetchImpl) {\n    // Provide an option to override the default URL\n    this._instance = _instance\n    this._clientOptions = _clientOptions\n    if (this._clientOptions.rootURL == null) { this._clientOptions.rootURL = 'https://api.github.com' }\n    if (this._clientOptions.useETags == null) { this._clientOptions.useETags = true }\n    if (this._clientOptions.usePostInsteadOfPatch == null) { this._clientOptions.usePostInsteadOfPatch = false }\n    if (this._clientOptions.userAgent == null) {\n      if (typeof window === 'undefined' || window === null) {\n        // Set the `User-Agent` because it is required and NodeJS\n        // does not send one by default.\n        // See http://developer.github.com/v3/#user-agent-required\n        this._clientOptions.userAgent = 'octokat.js'\n      }\n    }\n\n    // These are updated whenever a request is made (optional)\n    if (typeof this._clientOptions.emitter === 'function') {\n      this._emit = this._clientOptions.emitter\n    }\n\n    this._pluginMiddlewareAsync = map(filter(plugins, ({requestMiddlewareAsync}) => requestMiddlewareAsync), plugin => plugin.requestMiddlewareAsync.bind(plugin)\n    )\n    this._plugins = plugins\n    this._fetchImpl = fetchImpl\n  }\n\n  // HTTP Request Abstraction\n  // =======\n  //\n  request (method, path, data, options = {isRaw: false, isBase64: false, isBoolean: false, contentType: 'application/json'}, cb) {\n    if (typeof options === 'undefined' || options === null) { options = {} }\n    if (options.isRaw == null) { options.isRaw = false }\n    if (options.isBase64 == null) { options.isBase64 = false }\n    if (options.isBoolean == null) { options.isBoolean = false }\n    if (options.contentType == null) { options.contentType = 'application/json' }\n\n    // console.log method, path, data, options, typeof cb\n\n    // Only prefix the path when it does not begin with http.\n    // This is so pagination works (which provides absolute URLs).\n    if (!/^http/.test(path)) { path = `${this._clientOptions.rootURL}${path}` }\n\n    let headers = {\n      'Accept': this._clientOptions.acceptHeader || 'application/json'\n    }\n\n    // Safari/Firefox do not like setting the user-agent header\n    if (this._clientOptions.userAgent) {\n      headers['User-Agent'] = this._clientOptions.userAgent\n    }\n\n    let acc = {method, path, headers, options, clientOptions: this._clientOptions}\n\n    // To use async.waterfall we need to pass in the initial data (`acc`)\n    // so we create an initial function that just takes a callback\n    let initial = Promise.resolve(acc)\n\n    let prev = initial\n    this._pluginMiddlewareAsync.forEach((p) => {\n      prev = prev.then(p)\n    })\n    return prev.then((acc) => {\n      ({method, headers} = acc)\n\n      if (options.isRaw) { headers['Accept'] = 'application/vnd.github.raw' }\n\n      let fetchArgs = {\n        // Be sure to **not** blow the cache with a random number\n        // (GitHub will respond with 5xx or CORS errors)\n        method,\n        headers,\n        body: (!options.isRaw && data && JSON.stringify(data)) || data\n      }\n\n      let eventId = ++EVENT_ID\n      __guardFunc__(this._emit, f => f('start', eventId, {method, path, data, options}))\n\n      return this._fetchImpl(path, fetchArgs)\n      .then((response) => {\n        let jqXHR = response\n\n        // Fire listeners when the request completes or fails\n        if (this._emit) {\n          if (response.headers.get('X-RateLimit-Limit')) {\n            let rateLimit = parseFloat(response.headers.get('X-RateLimit-Limit'))\n            let rateLimitRemaining = parseFloat(response.headers.get('X-RateLimit-Remaining'))\n            let rateLimitReset = parseFloat(response.headers.get('X-RateLimit-Reset'))\n            // Reset time is in seconds, not milliseconds\n            // if rateLimitReset\n            //   rateLimitReset = new Date(rateLimitReset * 1000)\n\n            var emitterRate = {\n              remaining: rateLimitRemaining,\n              limit: rateLimit,\n              reset: rateLimitReset\n            }\n\n            if (response.headers.get('X-OAuth-Scopes')) {\n              emitterRate.scopes = response.headers.get('X-OAuth-Scopes').split(', ')\n            }\n          }\n          this._emit('end', eventId, {method, path, data, options}, response.status, emitterRate)\n        }\n\n        // Return the result and Base64 encode it if `options.isBase64` flag is set.\n\n        // Respond with the redirect URL (for archive links)\n        // TODO: implement a `followRedirects` plugin\n        if (response.status === 302) {\n          return response.headers.get('Location')\n        } else if (options.isBoolean && response.status === 204) {\n          // If the request is a boolean yes/no question GitHub will indicate\n          // via the HTTP Status of 204 (No Content) or 404 instead of a 200.\n          return true\n        } else if (options.isBoolean && response.status === 404) {\n          return false\n        // } else if (options.isBoolean) {\n        //   throw new Error(`Octokat Bug? got a response to a boolean question that was not 204 or 404.  ${fetchArgs.method} ${path} Status: ${response.status}`)\n        } else if ((response.status >= 200 && response.status < 300) || response.status === 304 || response.status === 302 || response.status === 0) {\n          // If it was a boolean question and the server responded with 204 ignore.\n          let dataPromise\n\n          // If the status was 304 then let the cache handler pick it up. leave data blank\n          if (response.status === 304) {\n            dataPromise = Promise.resolve(null)\n          } else {\n            // TODO: use a blob if we are expecting a binary\n\n            const contentType = response.headers.get('content-type') || ''\n\n            // Use .indexOf instead of .startsWith because PhantomJS does not support .startsWith\n            if (contentType.indexOf('application/json') === 0) {\n              dataPromise = response.json()\n            } else {\n              // Other contentTypes:\n              // - 'text/plain'\n              // - 'application/octocat-stream'\n              // - 'application/vnd.github.raw'\n              dataPromise = response.text()\n            }\n          }\n\n          return dataPromise.then((data) => {\n            acc = {\n              clientOptions: this._clientOptions,\n              plugins: this._plugins,\n              data,\n              options,\n              jqXHR, // for cacheHandler\n              status: response.status, // cacheHandler changes this\n              request: acc, // Include the request data for plugins like cacheHandler\n              requester: this, // for Hypermedia to generate verb methods\n              instance: this._instance // for Hypermedia to be able to call `.fromUrl`\n            }\n            return this._instance._parseWithContextPromise('', acc)\n          })\n        } else {\n          return response.text().then((text) => {\n            return Promise.reject(new Error(`${text} ${fetchArgs.method} ${path} Status: ${response.status}`))\n          })\n        }\n      })\n    })\n  }\n}\n\nfunction __guardFunc__ (func, transform) {\n  return typeof func === 'function' ? transform(func) : undefined\n}\n"]}