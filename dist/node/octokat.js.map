{"version":3,"sources":["../../src/octokat.js"],"names":["deprecate","require","OctokatBase","HypermediaPlugin","ALL_PLUGINS","Octokat","clientOptions","plugins","disableHypermedia","filter","plugin","Fetch","instance","module","exports"],"mappings":";;AAAA,IAAMA,YAAYC,QAAQ,aAAR,CAAlB;AACA,IAAMC,cAAcD,QAAQ,QAAR,CAApB;;AAEA,IAAME,mBAAmBF,QAAQ,sBAAR,CAAzB;;AAEA,IAAIG,cAAc,CAChBH,QAAQ,0BAAR,CADgB,EACqB;AACrCA,QAAQ,0BAAR,CAFgB,EAGhBA,QAAQ,yBAAR,CAHgB,EAIhBA,QAAQ,wBAAR,CAJgB,EAKhBA,QAAQ,qCAAR,CALgB,EAOhBA,QAAQ,wBAAR,CAPgB,EAQhBA,QAAQ,qBAAR,CARgB,EAUhBA,QAAQ,sBAAR,CAVgB;AAWhB;AACA;AACAA,QAAQ,yBAAR,CAbgB,EAchBA,QAAQ,uBAAR,CAdgB,EAgBhBE,gBAhBgB,EAiBhBF,QAAQ,sBAAR,CAjBgB,CAAlB;;AAoBA,IAAII,UAAU,SAAVA,OAAU,GAA8B;AAAA,MAApBC,aAAoB,uEAAJ,EAAI;;AAC1C,MAAIA,cAAcC,OAAd,IAAyB,IAA7B,EAAmC;AAAED,kBAAcC,OAAd,GAAwBH,WAAxB;AAAqC;;AAE1E,MAAIE,cAAcE,iBAAlB,EAAqC;AACnCR,cAAU,0FAAV;AACAM,kBAAcC,OAAd,GAAwBD,cAAcC,OAAd,CAAsBE,MAAtB,CAA6B;AAAA,aAAUC,WAAWP,gBAArB;AAAA,KAA7B,CAAxB;AACD;;AAED;AACA,MAAIE,QAAQM,KAAZ,EAAmB;AACjBT,gBAAYS,KAAZ,GAAoBN,QAAQM,KAA5B;AACD;AACD;AACA,MAAIC,WAAW,IAAIV,WAAJ,CAAgBI,aAAhB,CAAf;AACA,SAAOM,QAAP;AACD,CAfD;;AAiBA;AACAC,OAAOC,OAAP,GAAiBT,OAAjB","file":"octokat.js","sourcesContent":["const deprecate = require('./deprecate')\nconst OctokatBase = require('./base')\n\nconst HypermediaPlugin = require('./plugins/hypermedia')\n\nlet ALL_PLUGINS = [\n  require('./plugins/object-chainer'), // re-chain methods when we detect an object (issue, comment, user, etc)\n  require('./plugins/path-validator'),\n  require('./plugins/authorization'),\n  require('./plugins/preview-apis'),\n  require('./plugins/use-post-instead-of-patch'),\n\n  require('./plugins/simple-verbs'),\n  require('./plugins/fetch-all'),\n\n  require('./plugins/pagination'),\n  // Run cacheHandler after PagedResults so the link headers are remembered\n  // but before hypermedia so the object is still serializable\n  require('./plugins/cache-handler'),\n  require('./plugins/read-binary'),\n\n  HypermediaPlugin,\n  require('./plugins/camel-case')\n]\n\nlet Octokat = function (clientOptions = {}) {\n  if (clientOptions.plugins == null) { clientOptions.plugins = ALL_PLUGINS }\n\n  if (clientOptions.disableHypermedia) {\n    deprecate('Please use the clientOptions.plugins array and just do not include the hypermedia plugin')\n    clientOptions.plugins = clientOptions.plugins.filter(plugin => plugin !== HypermediaPlugin)\n  }\n\n  // HACK to propagate the Fetch implementation\n  if (Octokat.Fetch) {\n    OctokatBase.Fetch = Octokat.Fetch\n  }\n  // the octokat instance\n  let instance = new OctokatBase(clientOptions)\n  return instance\n}\n\n// module.exports = Octokat;\nmodule.exports = Octokat\n"]}