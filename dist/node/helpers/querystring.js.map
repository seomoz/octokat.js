{"version":3,"sources":["../../../src/helpers/querystring.js"],"names":["toQueryString","options","omitQuestionMark","params","object","key","value","push","encodeURIComponent","length","join","module","exports"],"mappings":";;AAAA;AACA;AACA,IAAIA,gBAAgB,SAAhBA,aAAgB,CAAUC,OAAV,EAAmBC,gBAAnB,EAAqC;AACvD;AACA,MAAI,CAACD,OAAD,IAAYA,YAAY,EAA5B,EAAgC;AAAE,WAAO,EAAP;AAAW;;AAE7C,MAAIE,SAAS,EAAb;AACA,MAAIC,SAASH,WAAW,EAAxB;AACA,OAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,QAAIE,QAAQF,OAAOC,GAAP,CAAZ;AACA,QAAIC,KAAJ,EAAW;AAAEH,aAAOI,IAAP,CAAeF,GAAf,SAAsBG,mBAAmBF,KAAnB,CAAtB;AAAoD;AAClE;AACD,MAAIH,OAAOM,MAAX,EAAmB;AACjB,QAAIP,gBAAJ,EAAsB;AACpB,mBAAWC,OAAOO,IAAP,CAAY,GAAZ,CAAX;AACD,KAFD,MAEO;AACL,mBAAWP,OAAOO,IAAP,CAAY,GAAZ,CAAX;AACD;AACF,GAND,MAMO;AACL,WAAO,EAAP;AACD;AACF,CAnBD;;AAqBAC,OAAOC,OAAP,GAAiBZ,aAAjB","file":"querystring.js","sourcesContent":["// Converts a dictionary to a query string.\n// Internal helper method\nlet toQueryString = function (options, omitQuestionMark) {\n  // Returns '' if `options` is empty so this string can always be appended to a URL\n  if (!options || options === {}) { return '' }\n\n  let params = []\n  let object = options || {}\n  for (let key in object) {\n    let value = object[key]\n    if (value) { params.push(`${key}=${encodeURIComponent(value)}`) }\n  }\n  if (params.length) {\n    if (omitQuestionMark) {\n      return `&${params.join('&')}`\n    } else {\n      return `?${params.join('&')}`\n    }\n  } else {\n    return ''\n  }\n}\n\nmodule.exports = toQueryString\n"]}